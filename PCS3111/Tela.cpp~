/**
Escola Politecnica da Universidade de Sao Paulo
14 de outubro de 2015

PCS3111 - Laboratorio de Programacao Orientada a Objetos
Exercicio Programa 2 - 2015

Turma 23
	Daniel Nery Silva de Oliveira - 9349051
	Mateus Almeida Barbosa        - 9349072

Professor Jaime S. Sichman
**/

#include <iostream>
#include <string>

#include "Perfil.hpp"
#include "Tela.hpp"
#include "colors.hpp"

using namespace std;
using namespace Polikut;

extern vector<Perfil*> perfis;

#ifdef _WIN32
extern HANDLE hOut;
#endif // _WIN32

namespace Polikut {
	void Tela::principal() {
	    CLEAR;
		cout << "\nPoli"; CPINK; cout << "Kut\n"; CRESET;
        cout << "-----------------------------------------\n"
			 << "1) Cadastrar Perfil\n"
			 << "2) Logar Como Perfil\n"
			 << "3) Terminar\n" << endl
			 << "Digite uma opcao: ";
	}

	void Tela::cadastro() {
	    CLEAR;
		if (perfis.length() > 9) {
			cout << "Numero maximo de perfis cadastrados.";
            cout << "\nAperte Enter para retornar\n";
            cin.get();
            while (cin.get() != '\n');
			return;
		}
		string nome, dataDeNascimento, pais;
		cout << "\nInforme os dados da perfil: \n";

		cout << "Nome: "; CGREEN;
		cin.ignore();
		getline(cin, nome); CRESET;

		cout << "Data de Nascimento: "; CGREEN;
		getline(cin, dataDeNascimento); CRESET;

		cout << "Pais: "; CGREEN;
		getline(cin, pais); CRESET;

		perfis[perfis.length()] = Perfil(nome, dataDeNascimento, pais);
		CGREEN; cout << perfis[perfis.length()++].getNome(); CRESET; cout << " cadastrado com sucesso.\n";

        cout << "\nAperte Enter para retornar\n";
        while (cin.get() != '\n');
	}

	void Tela::login() {
		for(;;) {
	    CLEAR;
			int opcao = 0;
			if (perfis.length() > 0) {
				cout << "\nEscolha uma das perfis:\n"; CGREEN;
				for (int i = 0; i < perfis.length(); i++)
					cout << i + 1 << ") " << perfis[i].getNome() << endl;
				CRESET; cout << "\nDigite um numero para logar ou 0 para voltar: ";
			} else {
				cout << "\n--Não há perfis cadastradas no sistema--\n"
					 <<   "      Aperte Enter para retornar\n";
				cin.get();
				while (cin.get() != '\n');
				return;
			}
			if (cin >> opcao) {
				if (opcao == 0)
					return;
				if (opcao >= 1 && opcao <= perfis.length())
					info(perfis[opcao - 1]);
			} else {
				cin.clear();
				while (cin.get() != '\n');
			}
		}
	}

	void Tela::info(Perfil& perfil) {
		for (;;) {
	    CLEAR;
			int opcao = 0;
			cout << "Perfil: "; CGREEN; cout << perfil.getNome() << endl;
			cout << perfil.getDataDeNascimento(); CRESET; cout << " | "; CGREEN; cout << perfil.getPais() << endl;
			CRESET;
			if (perfil.getNumContatos() > 0 ) cout << "\nContatos: \n";
			CGREEN; perfil.verContatos(); CRESET;
			cout << "-----------------------------------------\n\n"
				 << "Escolha uma opcao:\n"
				 << "1) Adicionar contato\n"
				 << "2) Ver mensagens enviadas\n"
				 << "3) Ver mensagens recebidas\n"
				 << "4) Escrever mensagem\n"
				 << "0) Voltar" << endl;

			cout << "\nDigite uma opcao: ";
	 		if(cin >> opcao)
		 		switch (opcao) {
		 			case 0:
		 			return;

		 			case 1:
					adicionarContato(perfil);
					break;

					case 2:
					mensagensEnviadas(perfil);
					break;

					case 3:
					mensagensRecebidas(perfil);
					break;

					case 4:
					escreverMensagem(perfil);
		 			break;
	 			}
 			else {
	 			cin.clear();
	 			while (cin.get() != '\n');
			}
		}
	}

	void Tela::adicionarContato(Perfil& perfil) {
		for (;;) {
	    CLEAR;
            int opcao = 0;
            cout << "Perfils\n"
                 << "-----------------------------------------\n";
			for (int i = 0; i < perfis.length(); i++) {
				CGREEN; cout << i + 1 << ") " << perfis[i].getNome() << "\n"; CRESET;
			}
            cout << "\nEscolha um contato para adicionar ou 0 para voltar: ";
			if(cin >> opcao) {
				if (opcao == 0)
					return;
				if (opcao >= 1 && opcao <= perfis.length()) {
					perfil.adiciona(&perfis[opcao - 1]);                   // -
					/*switch(perfil.adiciona(&perfis[opcao - 1])) {        // Caso em que a funcao e do tipo int e
                    case 0:                                                 // retorna um valor de erro, que e tratado
						CGREEN; cout << perfis[opcao - 1].getNome(); CRESET; // exterioremente
						cout << " conectado a ";
						CGREEN; cout << perfil.getNome() << endl; CRESET;
                        break;
                    case (-1):
                        cout << "Contato ja adicionado!\n";
                        break;
                    case (-2):
                        cout << "Voce nao pode adicionar a si mesmo!\n";
                        break;
                    }*/
                    cout << "\nAperte Enter para retornar\n";
                    cin.get();
                    while (cin.get() != '\n');
                    return;
				}
			} else {
				cin.clear();
				while (cin.get() != '\n');
			}
		}
	}

	void Tela::mensagensEnviadas(Perfil& perfil) {
	    CLEAR;
		cout << "Mensagens Enviadas\n"
		 	 << "-----------------------------------------\n";
		perfil.getMensagensEnviadas().listar();
        cout << "\nAperte Enter para retornar\n";
		cin.get();
		while (cin.get() != '\n');
		return;
	}

	void Tela::mensagensRecebidas(Perfil& perfil) {
		for (;;) {
		    CLEAR;
			int opcao = 0;
			cout << "Mensagens Recebidas\n"
				 << "-----------------------------------------\n";
			perfil.getMensagensRecebidas().listar();

			if (perfil.getMensagensRecebidas().getTotal() > 0)
				cout << "\nDigite o numero da mensagem para curtir ou 0 para voltar: ";
			else
				cout << "\nDigite 0 para voltar: ";

			if(cin >> opcao) {
				if (opcao == 0)
					return;
				if (opcao > 0 && opcao <= perfil.getMensagensRecebidas().getTotal()) {
					perfil.getMensagensRecebidas().getMensagem(opcao)->curtir();
				}
			} else {
				cin.clear();
				while (cin.get() != '\n');
			}
		}
	}

	void Tela::escreverMensagem(Perfil& perfil) {
	    CLEAR;
	    if (perfil.getNumContatos() == 0) {
            cout << "Voce nao tem nenhum contato :(\n"
                << "Por que nao adiciona algum na tela anterior? =D\n";
            cout << "\nAperte Enter para retornar\n";
            cin.get();
            while (cin.get() != '\n');
            return;
	    }
        string mensagem;
        cout << "Digite a mensagem: ";

        cin.ignore();
        getline(cin, mensagem);

        perfil.envia(mensagem);
        cout << "Mensagem enviada a todos os contatos\n";
		cout << "\nAperte Enter para retornar\n";
		while (cin.get() != '\n');
	}
}
